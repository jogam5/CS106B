http://cs106b.stanford.edu/about_assessments
"This page is currently under construction! More information about the mid-quarter and end-of-quarter assessments will be posted here soon.   "
http://cs106b.stanford.edu/about_assignments
"We have a great set of assignments planned that follow up on the material presented in lecture and section. Programming is a skill best learned by doing, so the assignments form an integral part of your experience in the course. These projects will be fun, challenging, illuminating, and rewarding. Your sense of pride upon finishing is well deserved and your efforts earn you powerful skills and deep understanding.  Common questions about assignments  What programming environment and tools are used?  We will be using Qt Creator, which is an IDE for writing and building C++ programs. Please visit the Qt Installation Guide for further instructions on how to download and install Qt Creator.  What is the assignment schedule?  Our schedule plans for one assignment each week, due weekly on Friday at 11:59pm AoE (Anywhere on Earth).  What is the expected assignment workload? Depending on the week's topics, the accompanying assignment may consist of written problems, hands-on exercises with the tools, targeting coding tasks, and/or a larger complete program.  Students self-report spending between 8 and 15 hours on each assignment.  What is the policy on late assignments?  Students are automatically given a penalty-free 48 hour extension on all assignments. Read our course late policy for the details.  What is the assignment collaboration policy?  The assignments are to be done individually and should represent independent, original work. We adhere to the Stanford and CS department Honor Code policies. Please review our Honor Code handout to see specific examples of its application to coursework in this course.  How can we get help on our assignments? The instructor and head TA will hold office hours (Zoom). The course helpers and section leaders staff regular LaIR helper hours (Zoom).  Our online forum allows public Q&amp;A and discussion with your peers. Please participate!  How are assignments evaluated? Programs will be graded on \"functionality\" (is the program's behavior correct?) and \"style\" (is the code well written and elegant?). The evaluation for each category uses this bucket scale:          +    Exceeds our expectations, is effectively \"perfect\". WOW! To receive this grade, a program often reflects additional work beyond the requirements or gets the job done in a particularly elegant way.           ✓+   Satisfies all the requirements for the assignment, showing solid functionality as well as good style. Nice job!           ✓   Meets the requirements for the assignment, with a few small problems or areas of improvement. Solid work           ✓-   Has problems serious enough to fall short of the requirements for the assignment. Needs improvement.           -   Has extremely serious deficiencies, does not demonstrate significant effort and understanding. Danger           0    Not submitted.      How do we receive feedback from our grader? One great feature of the CS106 courses is that your programs are graded interactively in a one-on-one session with your section leader so you get targeted feedback for individual improvement.  Your section leader will explain in section how to schedule these sessions and go over the grading process in more detail. "
http://cs106b.stanford.edu/about_course
"CS 106B, Programming Abstractions is the follow-on course to CS 106A. It is taught in C++, although students are only expected to know some Python (or other object oriented language) before enrolling in the course. That said, if you are taking CS 106B without taking CS 106A, you should probably look at the Course Placement handout from the website to see if you are in an appropriate course.  The major learning goals for the course are:     To learn how to model and solve complex problems with computers.   To explore common abstractions for representing problems.   To learn how to harness recursion and understand how to think about problems recursively.   To quantitatively analyze different approaches for solving problems.   To learn to use the most efficient data structures and methods (e.g., by using recursion, when appropriate) to solve problems.   To learn how to efficiently debug programs using an Integrated Development Environment.   Topics covered include:    An introduction to the C++ language.   Common containers, including vector, stack, queue, set, and map.   Common data structures, including linked lists, heaps, trees, hash tables (and hashing in general), and graphs.   The art of recursion.   Sorting   Introduction to orders of approximation (\"Big O\") and asymptotic analysis.   C++ Classes.   We will have regular lectures during the 2:30 - 3:30 PDT (GMT -7) time frame. All lectures will be available live on Zoom, and also recorded for download or viewing after class.  There will be approximately one programming assignment per week, done on an individual basis, and the programming assignments will, in total, cover most of the topics listed above.  Students will be assigned to a small (10-13 person) recitation section that will meet once a week, via Zoom. Sections are led by Section Leaders, who have been through the CS 106 program and will help students digest the course material and will walk through practice programming problems. All sections will be taught online, and we expect to have enough sections to cover most time zones at a reasonable time of day.  The class will have online office hours (the LaIR), and there will be a relatively large window of opportunity to get online help.  There will be a mid-quarter and final assessment, though neither will be a traditional exam.  The course will be taught with a Satisfactory / No Credit grading scheme for all students, as per the university directive for all courses during Spring 2020.  "
http://cs106b.stanford.edu/about_lectures
"   Lectures will be delivered via Zoom Webinars, at the scheduled time (MWF 2:30pm PDT, GMT-7)   You are welcome to participate in live lectures via the Zoom links provided on Canvas. Students will be able to ask questions during lecture, which will be moderated by members of the course staff.   If you able to participate in the live lecture, there will also be a short 10-15 minute Zoom meeting hosted after class every day, where you can come and ask the course staff questions about the recently concluded lecture. Zoom links to these meetings are also provided on the course Canvas page.   You are also welcome to watch lectures at any time after the scheduled time. We are working on ensuring that the lecture videos are posted soon after each class ends.    Common questions about lectures   What tools will I need? If you want to watch the video live, you should be able to use Zoom in some form or another. It would be best to have a video feed if watching live. I.e., calling in from your phone would work, but seeing the slides and code in real-time is going to be beneficial. If you must call in, you should also try to have the slides up on your computer at the same time. Alternatively, you can download the videos after the class ends, and watch them without an Internet connection.  How can I ask a question on a Webinar? You can pose questions using the Zoom Q&amp;A feature, which will be moderated by the members of the course staff that are not lecturing.  What if I live in a time zone such that is inconvenient to watch the class live? You can download the videos to watch at any time after the class meeting time (after we have posted them).  Can I run code examples myself? Yes - we will either have a Qt project for you to download, or you should be able to keep a blank project open in Qt and type the code as we do. In general, we advise against doing this during class, but if you are watching the video and want to pause the video to test the code, that would work well.  "
http://cs106b.stanford.edu/about_section
"Each week, you'll meet for about an hour in a small discussion section. Each discussion section will be led by your assigned section leader, who will act as your mentor, grader, and personal connection to the greater CS106B course staff. Your section leader will help you review the material that has been introduced in lecture, explore topics in more depth, and generally answer questions any questions that you may have.  For every section, there will be a handout of section problems focusing on the material from that week of lecture. These section problems are designed to give you  extra practice with the course material. You're not expected to complete these problems before attending section and we won't be grading them for credit. Instead, think of them as a resource you can use to practice with the material as you see fit. You're not expected to cover all the problems in a given handout during section, so we strongly recommend using the problems you didn't complete as extra practice. Solutions will be released to all section problems every Friday evening after all sections have been completed.  Attendance and participation in section will be mandatory for all students. Your section leader will be grading your participation in section on a weekly basis, and these grades will make up 10% of your final grade. Participation in section can take many forms, including asking questions, contributing answers, and participating in discussions with fellow students. We will be providing section times that run from 8:30am to 8:30pm PDT, so we are hopeful that all students will be able to find a section time that works for them. If you have concerns about your ability to attend and participate in section, due to any factor (time zone, technological barriers, etc.) please email Nick (nbowman@stanford.edu) and he can work with you to arrange necessary accommodations.   Common questions about sections  How do I sign up for section? Section signups will be conducted on the CS198 website. Section signups will open on Thursday, April 9 at 5pm PDT and will close on Sunday, April 12 at 5pm PDT. Unlike Hamilton tickets, section sign-ups are not first-come first-serve, so don't worry about rushing to fill out your preferences as soon as the form opens - just make sure to submit your preferences before the window closes! After a matching process, your section assignments will be emailed out to you by the evening of Tuesday, April 14. Sections begin the second week of classes. Note that you should only sign up for sections at the URL indicated previously (you should not sign-up for sections on Axess).  Is section attendance mandatory? Yes, attendance and participation in section will be graded and will make up 10% of your final grade in the class. As per course policy, students must earn a passing grade in every core component of the class in order to pass the overall class, so we expect that students will regularly attend section and participate with a high level of engagements. If you have concerns about this policy as it related to your personal situation, please email Nick.  How will section participation be graded? Section participation will be graded every week on a scale from 0 to 2. The grades will be assigned as follows:    2 : Showed up to section on time, followed section norms, participated in an engaged manner   1 : Showed up to section late, minimal participation   0 : Did not show up to section, or did not follow established section norms and policies   Where can I find the section problems? Where can I find the solutions? The section problems will be posted on the course website under the \"Sections\" tab of the navigation bar at the beginning of every week. At the end of every week (on Friday evening), the section handout will be updated with the solutions.  What tools will I need for section? Is there anything I need to set up or know going in? Similar to lectures, section will be conducted virtually over Zoom. You can find your assigned section time and Zoom meeting information on Paperless. Folks within the CS198 program have put together this very helpful Guide to Section for Students - make sure to check that out for section tips and FAQs!  Where can I find my section Zoom information? You can find the Zoom information for your assigned section on Paperless.  What should I do if I miss one of my sections? If you miss your section in a given week, you can attend another section that week to makeup your absence. Make sure to let the section leader whose section you attend know that you're there so that they can let your section leader know that you attended. A list of all section times (and corresponding Zoom information for each section) can be found on this page. "
http://cs106b.stanford.edu/about_staff
"                      Lecturer: Chris Gregg ✉️cgregg@stanford.edu                         Lecturer: Julie Zelenski ✉️zelenski@stanford.edu                         Head TA: Nick Bowman ✉️nbowman@stanford.edu                                   aamnah khalid                          abdu mohamdy                          ahmed abdalla                          alex bucquet                          alice yang                          allie littleton                          amir zur                          anna ekholm                          avery wang                          baker sharp                          brian zeng                          colin kincaid                          david liu                          david wu                          drew bassilakis                          ella tessier lavigne                          emilia darmstadt                          eric bear                          ethan chi                          frankie cerkvenik                          hannah zhang                          jacob tie shue                          james mayclin                          jeremy barenholtz                          jerry chen                          jillian tang                          jonathan kula                          jr ereyi                          julio ballista                          justin tinker                          kaitlin hsu                          katherine wu                          kathleen mhatre                          keegan mehall                          kimberly batdorf                          kinbert chou                          lauren saue fletcher                          matthew kolodner                          maya ziv                          oliver brady                          patrick demichele                          peter hansel                          rachel gardner                          richard lin                          robbie selwyn                          ryan cao                          sam spinner                          sidhika balachandar                          thariq ridha                          tommy yang                          trip master                          zheng lian           Common questions about section leading   How do I become a section leader someday? You can apply during/after completing 106B. Come join us! Application information can be found on the CS 198 Website. "
http://cs106b.stanford.edu/all_announcements.html
"      Section Assignments 4 days ago by Nick  Section assignments have been made. Students who filled out the section signup on time should have received an email with details of their section. If your section time no longer works for you or you were unable to sign up for a section in time, visit the CS198 Website to join a section.  This page will also have a link to a list of all the section times for students wishing to make up a missed section. Note that section participation is required for all enrolled students in CS 106B.       Free Online CTL Tutoring 5 days ago by Nick  We've been asked to share this message on behalf of the Center for Teaching and Learning:     Want to meet with an experienced peer to discuss course concepts, think through a problem set, or prepare for an upcoming exam? CTL offers appointment tutoring for CS 106B, in addition to tutoring for a number of other courses. For more information and to schedule an appointment, visit our tutoring appointments and drop-in schedule page. We also have a variety of remote learning opportunities and academic coaching available to assist with all of your learning needs!        Assignment 1 Released 1 week and 1 day ago by Nick  Assignment 1 has now been released! In this assignment, you will get practice with C++ fundamentals, including functions, return, decomposition, strings, as well as good testing and debugging practices. Check out the assignment page for more info!       Section Signups, Qt Installation Help, and Other Logistics 1 week and 3 days ago by Nick  Here are the last set of important logistical announcements for this week:          Section signups are now live! To fill out your section time preferences, head on over to the CS198 website. Remember, everyone (including SCPD students) is required to join a section for this class, as this is how you get assigned a section leader that will be responsible for grading your assignments and conducting your assessments. You will be able to input and change your section preferences until Sunday, April 12 at 5pm PDT. After this point, the portal will temporarily close while assignments are being made. Section assignments will be released to you on Tuesday of next week, and sections will begin starting Wednesday of next week.           The Qt Installation Help Session will be happening tonight from 7-9pm PDT. The point of this help session is to help those of you that have encountered issues in the installation process. To save time, please make sure you have attempted to work through the installation process before coming to the help session tonight. For those of you that want to attend the session tonight, we will be using Queuestatus to manage requests. You can get in line to get help by signing up for the queue after it opens at 7pm. When signing up, please make sure to have your Zoom app open and to include your SUNetID (the letters in front of your  @stanford.edu email address) when signing up in the queue so that we can initiate a call with you on Zoom.           Assignment 0 is due tomorrow (Friday, April 10) at 11:59pm Anywhere on Earth (reference clock here). Make sure to get Qt Creator installed so that you can complete the assignment and be ready to start on Assignment 1 when that is released over the weekend! We've really enjoyed reading all of the form responses from those of you that have submitted so far - our respondents so far span 22 unique time zones and folks from all different walks of life!           If you have academic accommodations, please email Nick your OAE letter as soon as possible (if you have not already done so), so he can start to make arrangements. If you don't know what that means, don't worry about it!           Office Hours, Getting Help in CS106B, and Zoom Info 1 week and 5 days ago by Nick  With Assignment 0 out and the quarter starting to get into full swing, we will be starting to hold office hours beginning on Wednesday (4/8)! For more information about office hours, check out the Office Hours Schedule, which is also linked under the 'Quick Links' sidebar menu. This page contains information about the scheduling and format of office hours this quarter.  Additionally, there were multiple other avenues for getting help in CS106B that Chris introduced yesterday, including the LaIR, Ed Discussion, and email. For help navigating these different resources, check out the Getting Help page!  Finally, we have collected all the Zoom information for lecture, office hours, section and LaIR, all in one helpful place. You can find all this info on the Zoom Details page. This page has restricted access to enrolled students. If you need to access the page but are not officially enrolled in the class, please email Nick. If you are an auditor or waiting on a petition to officially enroll in the class, you can still access the Zoom webinar links for lecture from the course Canvas page.       Mental Health and Well-Being Resources 2 weeks ago by Nick  Our main priority as a course staff this quarter is your physical and mental health and well-being. While each member of the course staff is here to support you, we are not the only resources that are available to you this quarter. Although the majority of you will not be on campus this quarter, many of the traditional on-campus offices and departments that exist to support students have transitioned to a virtual format for this upcoming quarter. Here is a (non-exhaustive) list of some of the resources that we want you all to be aware of this quarter:          Vaden Health Center will be providing virtual one-on-one Well Being Coaching sessions to help support students in achieving well-being in these challenging times           Your Residence Deans and Graduate Life Office Deans will still be available for urgent/emergency response and consultation           Vaden Health Center is also providing an entire online hub dedicated to virtual well-being resources. Included are well-being tips and a calendar of continuing virtual well-being events.           Stanford Mutual Aid is providing a wide diversity of different resources, from housing to emotional support, all across the world.       We hope that you will take the time this quarter to keep a pulse on your own mental health and well-being and utilize the above resources as necessary to build strength and resiliency in these uncertain times.        Who are you? 2 weeks ago by Nick  Even though CS106B is going to be a large class this quarter, all three of us on the course staff are interested to get to know each and every one of you! To that end, we have released a short Assignment 0, which includes a survey to help us learn more about you, along with a short tutorial to get you familiarized with Qt Creator, the development environment we will be using this quarter. You can find more information about the assignment on the Assign0 webpage.  This survey will help us tailor the class according to your needs and preferences. Please complete the assignment by Friday, April 10th at 11:59pm AoE (Anywhere on Earth).       CS106B ACE 2 weeks ago by Nick  CS100B, also known as CS106B ACE, is a 1-unit supplementary section designed to build a stronger foundation in computer science. Students participating in ACE will attend an additional weekly section and participate in exam review sessions and individual tutoring. Section will take place on Zoom from 4:30-6:30pm PDT every Thursday, starting this week.  ACE is one of the School of Engineering's Equity and Inclusion Initiatives. We especially want to provide an opportunity for students who come from educationally disadvantaged backgrounds or for anyone who feels they might need additional support in order to succeed. We limit enrollment to enable small classes that allow students to have one-on-one interactions with the TA.  If you are interested in joining the ACE section, email Ngoc Tran (Student Services Officer for Equity and Inclusion). If you have any questions about ACE, feel free to reach out to Garrick Fernandez (CS106B ACE TA).       Optional Test Lecture 2 weeks and 3 days ago by Julie, Chris, and Nick  We will be having a test run of our technical setup for delivering lectures this upcoming Friday, April 3 from 9-9:30am PDT. If you want to come by and say hi to the course staff, you can join using this Zoom link. The password for the Webinar is cs106bTest. This is completely optional and no course content will be covered during this lecture. We hope to see you there!       Welcome to CS106B 2 weeks and 6 days ago by Julie, Chris, and Nick  This is the website for CS106B (Programming Abstractions) in Spring 2020.  We're looking forward to a great quarter of online learning with you all! Our first day of class will be April 6, 2020 from 2:30-3:20PM.  This website will be under construction until the first day of class, so please pardon our dust! In the meantime, if you're interested in learning more about the course this quarter, hop on over to the Frequently Asked Questions for answers to questions you may have about CS106B this spring.       Last quarter's website 2 weeks and 6 days ago by Julie, Chris, and Nick  If you are looking for the Winter 2020 CS 106B course website, please click here        "
http://cs106b.stanford.edu/handouts/course_placement.html
"Handout written by Keith Schwarz.  The CS department offers many programming courses and it can be difficult to know exactly where to begin. This handout provides a general overview of these classes and some advice about selecting the class that's right for you.  If you have any questions, please feel free to come talk to the course staff! We'd be happy to offer one-on-one advice.  CS106A: Start here!  CS106A is our first-quarter programming course. If you're interested in learning how to program a computer, this is the place to start. CS106A has no prerequisites - it's open to everyone! Most students interested in learning computer programming will start here, including many eventual CS majors.  CS106A focuses on fundamental concepts in computer programming (expressions, conditionals, loops, methods, arrays, etc.) that arise in many different programming languages. Although CS106A is taught in Python, it is not designed as a class in standard Python programming.  In our experience, we've found that some high school CS classes are more rigorous than others. If you do have high school CS experience, we recommend reviewing the syllabus for CS106A to get a sense of what it covers. If you feel that you've seen all these topics before, you may want to start off in CS106B or CS106X. If you've covered some, but not all, of the topics from CS106A, you might want to look into CS106AX as a starting point. As always, feel free to ask the course staff if you have questions about where to begin!  We recommend that you take CS106A if     You are interested in learning to program computers.   You have little to no prior programming experience.   We recommend that you not take CS106A if     You have prior programming experience at a level comparable to an introductory college course (for example, if you scored a 4 or 5 on the AP CS exam).   You meet the criteria for taking CS106AX and are interested in a more accelerated treatment of the material.   You have prior programming experience and want to learn how to program in Python.   In the 2019-2020 academic year, CS106A is offered every quarter. Visit the CS106A website.  CS106AX: Honors start  If you have some prior programming experience but haven't covered everything that's normally explored in CS106A, then our CS106AX course may be for you. It functions as an introduction to programming in both JavaScript and Python, allowing for a deeper exploration of programming fundamentals than what's typically explored in CS106A. Think of it as a more intensive version of CS106A for folks who have some past experience - it's a great way to learn and solidify the fundamentals for future study, though it's not designed to serve specifically as a deep dive into either JavaScript or Python.  We recommend that you take CS106AX if     You are interested in learning to program computers.   You have some prior programming experience, but not at the level required for CS106B/X.   We recommend that you not take CS106AX if     You have no prior programming experience.   You have sufficient prior programming experience to jump right into CS106B or CS106X (for example, you've scored a 4 or 5 on the AP CS exam).   You are taking it because you'd really like to take CS106A, but have a scheduling conflict that prevents you from doing so. (Please don't do this! This is a very different class than CS106A.)   You have prior programming experience and are specifically interested in learning Python or JavaScript.   In the 2019-2020 academic year, CS106AX is offered in Fall quarter. Visit the CS106AX website.  CS106B: Next step  CS106B is our second course in computer programming. It focuses on techniques for solving more complex problems than those covered in CS106A and for analyzing program efficiency. Specifically, it explores fundamental data types and data structures, recursive problem solving, graph algorithms, and basic algorithmic analysis.  CS106B assumes you have programming experience at the level of CS106A, though you don't necessarily have to have taken CS106A in order to take CS106B. If you've seen basic control structures (conditions, loops), variables, arrays/lists, maps, and program decomposition, then you should be ready to take CS106B.  CS106B is taught using the C++ programming language, but uses C++ more as a vehicle for ideas than as an object of study. If you're interested in studying C++ in depth, consider looking into CS106L.  We recommend that you take CS106B if     You have prior programming experience at the level of CS106A or CS106AX.   You are interested in learning more about problem-solving with computers.   You've programmed before but have not seen recursion, data structures, or algorithmic analysis.   We recommend that you not take CS106B if     You already have completed equivalent coursework elsewhere.   You have little to no prior programming experience.   You have prior programming experience and want to specifically learn C++ programming.   In the 2019-2020 academic year, CS106B is offered every quarter. Visit the CS106B website.  CS106X: Next step, Honors  CS106X is the honors version of CS106B. It covers the same material as CS106B at a slightly faster pace, plus some additional topics not normally covered in CS106B. Depending on the offering, CS106X sometimes has an open-ended final project that culminates in a poster session. In the past, CS106X used to be CS106A and CS106B combined into a single quarter, but that is not currently the case.  You shouldn't feel pressure to take CS106X if you're thinking that at some point you might go on to major in computer science. Most CS majors go through the CS106A/B sequence, with only a small number of students opting to take CS106X. Rather, we'd recommend taking CS106X only if you're really interested in the material and want to explore it in more depth.  We recommend that you take CS106X if     You meet all criteria for taking CS106B.   You want to get a more in-depth treatment of the topics from CS106B.   You are willing to put in more work than is necessary for CS106B.   We recommend that you not take CS106X if     You have no programming experience and are hoping to complete the equivalent of CS106A/B in a single quarter.   You are taking it because you'd really like to take CS106B, but have a scheduling conflict that prevents you from doing so. (Please don't do this! Most people who try going down this route end up in Frown Town.)   You really want to take CS106B, but are concerned that you need to take CS106X to avoid falling behind everyone else (trust us, that's not going to happen.)   In the 2019-2020 academic year, CS106X is offered in Fall quarter. Visit the CS106X website.  CS106L: C++ language  CS106L is a one-unit companion course to CS106B/X that focuses purely on the C++ programming language. Unlike CS106A and CS106B, which focus more on general programming skills and fundamental programming concepts, CS106L is specifically designed to focus on language features particular to C++ and how to use the C++ programming language to solve problems. Although CS106L is designed as a companion course to CS106B and CS106X, it's open to anyone with a comparable background.  We recommend that you take CS106L if     You have prior programming experience at the level of CS106B or CS106X (or are currently enrolled in those courses.)   You are interested in learning more about the C++ programming language.   We recommend that you not take CS106L if     You want a deeper understanding of topics like recursion, data structures, or big-O notation.   You want to learn programming at the level of CS106B or CS106X, but don't have the time to take those courses.   In the 2019-2020 academic year, CS106L is offered year-round. Visit the CS106L website.  CS107: How it all works  After completing the intro programming sequence, CS107 takes you under the hood to learn the ins and outs of computer systems. It explores how high-level programming constructs are represented internally inside the computer and how those internal representations affect program behavior and performance. Along the way, it provides programming maturity and exposure to developing software in a Unix environment.  CS107 has either CS106B or CS106X as prerequisites and assumes an understanding of fundamental programming techniques and good programming style. As a result, it's rare for incoming students to jump directly into CS107 and to skip the CS106 series entirely. Typically, we'd only recommend this to students with a background comparable to CS106A/B and who already have good programming style. Most students, even those who go on to be CS majors, usually begin in CS106A/B/X.  We recommend that you take CS107 if     You have completed CS106B or CS106X or have the equivalent programming background, including familiarity with recursion and fundamental data structures (binary trees, dynamic arrays, linked lists, graphs, etc.)   You have experience writing readable code - writing comments, decomposing problems into smaller pieces, etc.   We recommend that you not take CS107 if     You have never before taken a class in computer programming.   You have prior programming experience, but have not met the postconditions of CS106B/X.   In the 2019-2020 academic year, CS107 is offered every quarter. Visit the CS107 website.  CS107E: How it works, embedded  CS107E is version of CS107 that covers similar topics but which focuses on programming a small computer that can easily fit into the palm of your hand. The class is smaller and more project-oriented than CS107 and lets you play around with small embedded devices to see how low-level systems concepts directly let you control physical devices. The CS107E FAQ offers perspective on advice on choosing between 107 and 107E.  We recommend that you take CS107E if     You meet all the requirements for CS107.   You enjoy working on open-ended projects.   We recommend that you not take CS107E if     You're nervous about taking CS107 and want to satisfy that requirement in a different way.   In the 2019-2020 academic year, CS107E is offered in Winter and Spring quarters. Visit the CS107E website.  CS105: Alternative start  If you're looking to learn more about computers or computing (for example, you want to learn how to make a web page, or how the Internet works, or how a computer is put together) without focusing too much on programming, you may want to try CS105. This course is designed to give a broader introduction to computing than CS106A at the expense of more significant programming depth.  We recommend that you take CS105 if     You have no prior background in computer programming.   You are interested in learning about computers and how programs control computers.   You are interested in exploring programming in less depth than what's covered in CS106A.   We recommend that you not take CS105 if     You know for certain that later on, you'll be taking CS106A.   You have prior programming experience at the level of CS106A or higher.   In the 2019-2020 academic year, CS105 is offered in Fall and Spring quarters.Visit the CS105 website.  CS106E: Alternative next step  CS106E is a terminal course for non-CS majors who have already taken CS106A and want to have a solid understanding of computer technology in addition to the programming the other CS106 courses focus on. The course is particularly useful to anyone that might work in the tech industry in a non-programming capacity. The course covers topics such as how the internet works, what an operating system does, how websites are built, cloud computing, artificial intelligence, computer security, and privacy.  We recommend that you take CS106E if     You meet all the requirements for taking CS106B.   You are fairly certain that you won't be continuing onward to a CS major in the future.   We recommend that you not take CS106E if     You are thinking about majoring in CS, but would like an easier alternative to CS106B/X.   In the 2019-2020 academic year, CS106E is offered in Spring quarter.Visit the CS106E website. "
